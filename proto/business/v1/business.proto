syntax = "proto3";
package business.v1;

import "common/v1/common.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "user/v1/user.proto";

/* models */

message Availability {
  enum Type {
    AVAILABLE = 0;
    UNAVAILABLE = 1;
  }

  string id = 1;
  string name = 2;
  bool active = 3;
  Type type = 4;

  google.protobuf.Timestamp start = 5;
  google.protobuf.Timestamp end = 6;
  google.protobuf.Duration duration = 7;
  google.protobuf.Duration step = 8;
  int64 frequency = 9;
  int32 repeat = 10;
  int32 slots = 11;

  Service service = 12;
}

message Service {
  enum Kind {
    BUSINESS_KIND_1 = 0;
  }

  enum Type {
    BUSINESS_TYPE_1 = 0;
  }

  string id = 1;
  string name = 2;
  bool active = 3;
  Kind kind = 4;
  Type type = 5;

  Business business = 6;
  repeated Availability availabilities = 7;
}

message Business {
  string id = 1;
  string name = 2;
  bool active = 3;

  repeated Service services = 4;
}

message Role {
  enum Type {
    ADMIN = 0;
    EDITOR = 1;
  }

  Type type = 1;
  oneof element {
    Business business = 2;
    Service service = 3;
  }
  user.v1.User user = 4;
}

/* filters */

message AvailabilityFilter {
  string id = 1;
}
message AvailabilitiesFilter {
  Service service = 1;
  optional google.protobuf.Timestamp from = 2;
}

message ServiceFilter {
  string id = 1;
}
message ServicesFilter {
  Business business = 1;
  optional Service.Kind kind = 2;
  optional Service.Type type = 3;
  optional common.v1.QueryParams params = 4;
}

message BusinessFilter {
  string id = 1;
}
message BusinessesFilter {
  optional Service.Kind kind = 1;
  optional Service.Type type = 2;
  optional common.v1.QueryParams params = 3;
}

message RoleFilter {
  Role role = 1;
}
message RolesFilter {
  repeated Role.Type types = 1;
  optional Business business = 2;
  optional Service service = 3;
  optional user.v1.User user = 4;
  optional common.v1.QueryParams params = 5;
}

/* service */

service BusinessService {
  rpc RegisterBusiness(RegisterBusinessRequest) returns (RegisterBusinessResponse);
  rpc GetBusiness(GetBusinessRequest) returns (GetBusinessResponse);
  rpc GetBusinesses(GetBusinessesRequest) returns (GetBusinessesResponse);

  rpc RegisterService(RegisterServiceRequest) returns (RegisterServiceResponse);
  rpc GetService(GetServiceRequest) returns (GetServiceResponse);
  rpc GetServices(GetServicesRequest) returns (GetServicesResponse);

  rpc AddAvailabilities(AddAvailabilitiesRequest) returns (AddAvailabilitiesResponse);
  rpc GetAvailabilities(GetAvailabilitiesRequest) returns (GetAvailabilitiesResponse);

  rpc GrantRoles(GrantRolesRequest) returns (GrantRolesResponse);
  rpc RevokeRoles(RevokeRolesRequest) returns (RevokeRolesResponse);
  rpc GetRoles(GetRolesRequest) returns (GetRolesResponse);

  // availability streaming
}

message RegisterBusinessRequest {
  Business business = 1;
}
message RegisterBusinessResponse {
  string business_id = 1;
}

message GetBusinessRequest {
  BusinessFilter filter = 1;
}
message GetBusinessResponse {
  Business business = 1;
}

message GetBusinessesRequest {
  BusinessesFilter filter = 1;
}
message GetBusinessesResponse {
  repeated Business businesses = 1;
}

message RegisterServiceRequest {
  Service service = 1;
}
message RegisterServiceResponse {
  string service_id = 1;
}

message GetServiceRequest {
  ServiceFilter filter = 1;
}
message GetServiceResponse {
  Service service = 1;
}

message GetServicesRequest {
  ServicesFilter filter = 1;
}
message GetServicesResponse {
  repeated Service services = 1;
}

message AddAvailabilitiesRequest {
  repeated Availability availabilities = 1;
}
message AddAvailabilitiesResponse {
  repeated string availability_ids = 1;
}

message GetAvailabilitiesRequest {
  AvailabilitiesFilter filter = 1;
}
message GetAvailabilitiesResponse {
  repeated Availability availabilities = 1;
}

message GrantRolesRequest {
  repeated Role roles = 1;
}
message GrantRolesResponse {
  bool granted = 1;
}

message RevokeRolesRequest {
  repeated Role roles = 1;
}
message RevokeRolesResponse {
  bool revoked = 1;
}

message GetRolesRequest {
  RolesFilter filter = 1;
}
message GetRolesResponse {
  repeated Role roles = 1;
}

/* storage */

service BusinessStorage {
  rpc CreateBusiness(CreateBusinessRequest) returns (CreateBusinessResponse);
  rpc UpdateBusiness(UpdateBusinessRequest) returns (UpdateBusinessResponse);
  rpc DeleteBusiness(DeleteBusinessRequest) returns (DeleteBusinessResponse);
  rpc FindBusiness(FindBusinessRequest) returns (FindBusinessResponse);
  rpc FindBusinesses(FindBusinessesRequest) returns (FindBusinessesResponse);

  rpc CreateService(CreateServiceRequest) returns (CreateServiceResponse);
  rpc UpdateService(UpdateServiceRequest) returns (UpdateServiceResponse);
  rpc DeleteService(DeleteServiceRequest) returns (DeleteServiceResponse);
  rpc FindService(FindServiceRequest) returns (FindServiceResponse);
  rpc FindServices(FindServicesRequest) returns (FindServicesResponse);

  rpc CreateAvailability(CreateAvailabilityRequest) returns (CreateAvailabilityResponse);
  rpc UpdateAvailability(UpdateAvailabilityRequest) returns (UpdateAvailabilityResponse);
  rpc DeleteAvailability(DeleteAvailabilityRequest) returns (DeleteAvailabilityResponse);
  rpc FindAvailability(FindAvailabilityRequest) returns (FindAvailabilityResponse);
  rpc FindAvailabilities(FindAvailabilitiesRequest) returns (FindAvailabilitiesResponse);

  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse);
  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse);
  rpc FindRole(FindRoleRequest) returns (FindRoleResponse);
  rpc FindRoles(FindRolesRequest) returns (FindRolesResponse);
}

message CreateBusinessRequest {
  Business business = 1;
}
message CreateBusinessResponse {
  string business_id = 1;
}

message UpdateBusinessRequest {
  Business business = 1;
}
message UpdateBusinessResponse {
  bool updated = 1;
}

message DeleteBusinessRequest {
  string business_id = 1;
}
message DeleteBusinessResponse {
  bool deleted = 1;
}

message FindBusinessRequest {
  BusinessFilter filter = 1;
}
message FindBusinessResponse {
  Business business = 1;
}

message FindBusinessesRequest {
  BusinessesFilter filter = 1;
}
message FindBusinessesResponse {
  repeated Business businesses = 1;
}

message CreateServiceRequest {
  Service service = 1;
}
message CreateServiceResponse {
  string service_id = 1;
}

message UpdateServiceRequest {
  Service service = 1;
}
message UpdateServiceResponse {
  bool updated = 1;
}

message DeleteServiceRequest {
  string service_id = 1;
}
message DeleteServiceResponse {
  bool deleted = 1;
}

message FindServiceRequest {
  ServiceFilter filter = 1;
}
message FindServiceResponse {
  Service service = 1;
}

message FindServicesRequest {
  ServicesFilter filter = 1;
}
message FindServicesResponse {
  repeated Service services = 1;
}

message CreateAvailabilityRequest {
  Availability availability = 1;
}
message CreateAvailabilityResponse {
  string availability_id = 1;
}

message UpdateAvailabilityRequest {
  Availability availability = 1;
}
message UpdateAvailabilityResponse {
  bool update = 1;
}

message DeleteAvailabilityRequest {
  string availability_id = 1;
}
message DeleteAvailabilityResponse {
  bool deleted = 1;
}

message FindAvailabilityRequest {
  AvailabilityFilter filter = 1;
}
message FindAvailabilityResponse {
  Availability availability = 1;
}

message FindAvailabilitiesRequest {
  AvailabilitiesFilter filter = 1;
}
message FindAvailabilitiesResponse {
  repeated Availability availabilities = 1;
}

message CreateRoleRequest {
  Role role = 1;
}
message CreateRoleResponse {
  bool created = 1;
}

message DeleteRoleRequest {
  Role role = 1;
}
message DeleteRoleResponse {
  bool deleted = 1;
}

message FindRoleRequest {
  RoleFilter filter = 1;
}
message FindRoleResponse {
  Role role = 1;
}

message FindRolesRequest {
  RolesFilter filter = 1;
}
message FindRolesResponse {
  repeated Role roles = 1;
}
