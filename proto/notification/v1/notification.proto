syntax = "proto3";
package notification.v1;

import "common/v1/request.proto";
import "common/v1/response.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message Notification {
  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_SUCCESS = 1;
    TYPE_INFORMATION = 2;
    TYPE_WARNING = 3;
    TYPE_ERROR = 4;
  }

  enum State {
    STATE_UNSPECIFIED = 0;
    STATE_SEEN = 1;
    STATE_UNSEEN = 2;
  }

  message Action {
    message RegisterUser {}

    oneof action {
      RegisterUser register_user = 1 [json_name = "register_user"];
    }
  }

  string id = 1;
  string user_id = 2 [json_name = "user_id"];
  Type type = 3;
  State state = 4;
  Action action = 5;
  google.protobuf.Timestamp created = 6;
}

service NotificationService {
  rpc GetNotifications(GetNotificationsRequest) returns (GetNotificationsResponse) {
    option (google.api.http) = {get: "/notifications"};
  }
  rpc GetNotification(GetNotificationRequest) returns (GetNotificationResponse) {
    option (google.api.http) = {get: "/notifications/{id}"};
  }

  rpc UpdateNotification(UpdateNotificationRequest) returns (UpdateNotificationResponse) {
    option (google.api.http) = {
      put: "/notifications/{id}"
      body: "state"
    };
  }
}

message GetNotificationsRequest {
  repeated string ids = 1;
  optional string user_id = 2 [json_name = "user_id"];
  optional common.v1.QueryParams params = 3;
}
message GetNotificationsResponse {
  repeated Notification notifications = 1;
}

message GetNotificationRequest {
  string id = 1;
}
message GetNotificationResponse {
  Notification notification = 1;
}

message UpdateNotificationRequest {
  string id = 1;
  Notification.State state = 2;
}
message UpdateNotificationResponse {
  Notification notification = 1;
}
