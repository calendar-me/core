syntax = "proto3";
package user.v1;

import "common/v1/request.proto";
import "common/v1/response.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "user/v1/role.proto";

/* model */
message User {
  enum Gender {
    GENDER_UNSPECIFIED = 0;
    GENDER_MALE = 1;
    GENDER_FEMALE = 2;
  }

  message Details {
    string firstname = 1;
    string lastname = 2;
    string avatar = 3;
    string phone = 4;
    Gender gender = 5;
  }

  string key = 1 [json_name = "_key"];
  string email = 2;
  optional Details details = 3;
}

/* filters */
message UsersFilter {
  repeated string keys = 1;
  optional common.v1.QueryParams params = 2;
}

service UserService {
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {get: "/v1/users"};
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {get: "/v1/users/{key}"};
  }
  rpc GetCurrentUser(google.protobuf.Empty) returns (GetCurrentUserResponse) {
    option (google.api.http) = {get: "/v1/users/me"};
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/v1/users/{key}"
      body: "request"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (common.v1.BoolResponse) {
    option (google.api.http) = {delete: "/v1/users/{key}"};
  }

  rpc GetRoles(GetRolesRequest) returns (GetRolesResponse) {
    option (google.api.http) = {get: "/v1/users/{key}/roles"};
  }
  rpc GrantRoles(GrantRolesRequest) returns (common.v1.BoolResponse) {
    option (google.api.http) = {
      post: "/v1/users/{key}/roles/grant"
      body: "roles"
    };
  }
  rpc RevokeRoles(RevokeRolesRequest) returns (common.v1.BoolResponse) {
    option (google.api.http) = {
      post: "/v1/users/{key}/roles/revoke"
      body: "roles"
    };
  }
}

message GetUsersRequest {
  UsersFilter filters = 1;
}
message GetUsersResponse {
  repeated User users = 1;
}

message GetUserRequest {
  string key = 1;
}
message GetUserResponse {
  User user = 1;
}

message GetCurrentUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string key = 1;
  User.Details request = 2;
}
message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string key = 1;
}

message GetRolesRequest {
  string key = 1; // user's id
  optional string business_id = 2 [json_name = "business_id"];
  optional string service_id = 3 [json_name = "service_id"];
}
message GetRolesResponse {
  repeated Role roles = 1;
}

message GrantRolesRequest {
  string key = 1;
  repeated Role roles = 2;
}
message RevokeRolesRequest {
  string key = 1;
  repeated Role roles = 2;
}
