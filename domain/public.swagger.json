{
  "swagger": "2.0",
  "info": {
    "title": "Calendar Me Services",
    "description": "Provides the functionalities endpoint for the calendar.me service.",
    "version": "1.0",
    "contact": {
      "name": "Calendar.Me",
      "url": "https://gtihub.com/calendar-me/core",
      "email": "support@calendar.me"
    }
  },
  "tags": [
    {
      "name": "BookingService"
    },
    {
      "name": "UserService"
    },
    {
      "name": "BusinessService"
    },
    {
      "name": "NotificationService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/availabilities": {
      "get": {
        "operationId": "BusinessService_GetAvailabilities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvailabilitiesResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BusinessService"
        ]
      },
      "post": {
        "operationId": "BusinessService_AddAvailabilities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddAvailabilitiesResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddAvailabilitiesRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/bookings": {
      "get": {
        "operationId": "BookingService_GetBookings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBookingsResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BookingService"
        ]
      },
      "post": {
        "operationId": "BookingService_Book",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BookResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BookRequest"
            }
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    },
    "/bookings/slots": {
      "get": {
        "operationId": "BookingService_GetSlots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSlotsResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    },
    "/bookings/slots/preview": {
      "post": {
        "operationId": "BookingService_PreviewSlots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PreviewSlotsResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PreviewSlotsRequest"
            }
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    },
    "/bookings/tickets/{id}": {
      "get": {
        "operationId": "BookingService_GetTicket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTicketResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BookingService"
        ]
      },
      "put": {
        "operationId": "BookingService_UpdateTicket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TicketState"
            }
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    },
    "/bookings/{id}": {
      "get": {
        "operationId": "BookingService_GetBooking",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBookingResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "slot's id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BookingService"
        ]
      },
      "put": {
        "operationId": "BookingService_UpdateBooking",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "slot's id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AvailabilityState"
            }
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    },
    "/bookings/{service_id}/tickets": {
      "get": {
        "operationId": "BookingService_GetTickets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTicketsResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    },
    "/business": {
      "get": {
        "operationId": "BusinessService_GetBusinesses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBusinessesResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BusinessService"
        ]
      },
      "post": {
        "operationId": "BusinessService_RegisterBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterBusinessResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterBusinessRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/business/{id}": {
      "get": {
        "operationId": "BusinessService_GetBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBusinessResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BusinessService"
        ]
      },
      "delete": {
        "summary": "TODO: Update Business Details",
        "operationId": "BusinessService_DeleteBusiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/notifications": {
      "get": {
        "operationId": "NotificationService_GetNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetNotificationsResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "params.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "params.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "params.order",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/notifications/{id}": {
      "get": {
        "operationId": "NotificationService_GetNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetNotificationResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationService"
        ]
      },
      "put": {
        "operationId": "NotificationService_UpdateNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1NotificationState"
            }
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/services": {
      "get": {
        "operationId": "BusinessService_GetServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetServicesResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BusinessService"
        ]
      },
      "post": {
        "operationId": "BusinessService_RegisterService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterServiceResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterServiceRequest"
            }
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "operationId": "BusinessService_GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetServiceResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BusinessService"
        ]
      },
      "delete": {
        "operationId": "BusinessService_DeleteService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BusinessService"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UserService_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUsersResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filters.ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filters.params.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filters.params.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filters.params.order",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/users/me": {
      "get": {
        "operationId": "UserService_GetCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCurrentUserResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "put": {
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/users/{id}/roles": {
      "get": {
        "operationId": "UserService_GetRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRolesResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user's id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "business_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/users/{id}/roles/grant": {
      "post": {
        "operationId": "UserService_GrantRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Role"
              }
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/users/{id}/roles/revoke": {
      "post": {
        "operationId": "UserService_RevokeRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BoolResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/v1ErrorResponse"
            }
          },
          "403": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Role"
              }
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "ActionRegisterUser": {
      "type": "object"
    },
    "NotificationAction": {
      "type": "object",
      "properties": {
        "register_user": {
          "$ref": "#/definitions/ActionRegisterUser"
        }
      }
    },
    "UserDetails": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/UserGender"
        }
      }
    },
    "UserGender": {
      "type": "string",
      "enum": [
        "GENDER_UNSPECIFIED",
        "GENDER_MALE",
        "GENDER_FEMALE"
      ],
      "default": "GENDER_UNSPECIFIED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddAvailabilitiesRequest": {
      "type": "object",
      "properties": {
        "availabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Availability"
          }
        }
      }
    },
    "v1AddAvailabilitiesResponse": {
      "type": "object",
      "properties": {
        "availabilityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Availability": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/v1AvailabilityState"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        },
        "step": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "format": "int64"
        },
        "repeat": {
          "type": "integer",
          "format": "int32"
        },
        "slots": {
          "type": "integer",
          "format": "int32"
        },
        "service_id": {
          "type": "string"
        }
      }
    },
    "v1AvailabilityState": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "STATE_AVAILABLE",
        "STATE_UNAVAILABLE"
      ],
      "default": "STATE_UNSPECIFIED"
    },
    "v1BookRequest": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string"
        },
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "v1BookResponse": {
      "type": "object",
      "properties": {
        "slot": {
          "$ref": "#/definitions/v1Slot"
        }
      }
    },
    "v1BoolResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1Business": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Service"
          }
        }
      }
    },
    "v1ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1GetAvailabilitiesResponse": {
      "type": "object",
      "properties": {
        "availabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Availability"
          }
        }
      }
    },
    "v1GetBookingResponse": {
      "type": "object",
      "properties": {
        "slot": {
          "$ref": "#/definitions/v1Slot"
        }
      }
    },
    "v1GetBookingsResponse": {
      "type": "object",
      "properties": {
        "slots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Slot"
          }
        }
      }
    },
    "v1GetBusinessResponse": {
      "type": "object",
      "properties": {
        "business": {
          "$ref": "#/definitions/v1Business"
        }
      }
    },
    "v1GetBusinessesResponse": {
      "type": "object",
      "properties": {
        "businesses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Business"
          }
        }
      }
    },
    "v1GetCurrentUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1GetNotificationResponse": {
      "type": "object",
      "properties": {
        "notification": {
          "$ref": "#/definitions/v1Notification"
        }
      }
    },
    "v1GetNotificationsResponse": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Notification"
          }
        }
      }
    },
    "v1GetRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        }
      }
    },
    "v1GetServiceResponse": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/v1Service"
        }
      }
    },
    "v1GetServicesResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Service"
          }
        }
      }
    },
    "v1GetSlotsResponse": {
      "type": "object",
      "properties": {
        "slots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Slot"
          }
        }
      }
    },
    "v1GetTicketResponse": {
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/v1Ticket"
        }
      }
    },
    "v1GetTicketsResponse": {
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Ticket"
          }
        }
      }
    },
    "v1GetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1GetUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1Notification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1NotificationType"
        },
        "state": {
          "$ref": "#/definitions/v1NotificationState"
        },
        "action": {
          "$ref": "#/definitions/NotificationAction"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1NotificationState": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "STATE_SEEN",
        "STATE_UNSEEN"
      ],
      "default": "STATE_UNSPECIFIED"
    },
    "v1NotificationType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_SUCCESS",
        "TYPE_INFORMATION",
        "TYPE_WARNING",
        "TYPE_ERROR"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "v1PreviewSlotsRequest": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string"
        },
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        },
        "availabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Availability"
          }
        }
      }
    },
    "v1PreviewSlotsResponse": {
      "type": "object",
      "properties": {
        "slots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Slot"
          }
        }
      }
    },
    "v1QueryParams": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "type": "string"
        }
      }
    },
    "v1RegisterBusinessRequest": {
      "type": "object",
      "properties": {
        "business": {
          "$ref": "#/definitions/v1Business"
        }
      }
    },
    "v1RegisterBusinessResponse": {
      "type": "object",
      "properties": {
        "business": {
          "$ref": "#/definitions/v1Business"
        }
      }
    },
    "v1RegisterServiceRequest": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/v1Service"
        }
      }
    },
    "v1RegisterServiceResponse": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/v1Service"
        }
      }
    },
    "v1Role": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1RoleType"
        },
        "user_id": {
          "type": "string"
        },
        "business_id": {
          "type": "string"
        },
        "service_id": {
          "type": "string"
        }
      }
    },
    "v1RoleType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_ADMIN",
        "TYPE_EDITOR"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "business_id": {
          "type": "string"
        },
        "availabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Availability"
          }
        }
      }
    },
    "v1Slot": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1AvailabilityState"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "availability": {
          "$ref": "#/definitions/v1Availability"
        }
      }
    },
    "v1Ticket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "slot_id": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "$ref": "#/definitions/v1TicketState"
        }
      }
    },
    "v1TicketState": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "STATE_IN_LINE",
        "STATE_CHECKED",
        "STATE_CANCELED"
      ],
      "default": "STATE_UNSPECIFIED"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/UserDetails"
        }
      },
      "title": "model"
    },
    "v1UsersFilter": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params": {
          "$ref": "#/definitions/v1QueryParams"
        }
      },
      "title": "filters"
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
