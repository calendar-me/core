syntax = "proto3";
package booking;
option go_package = "github.com/calendar-me/core/domain/schema";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "schema/users.proto";
import "schema/business.proto";

/* models */ 

message Slot {
    string id = 1;
    business.Availability.Type type = 2;
    google.protobuf.Timestamp start = 3;

    users.User user = 4; 
    business.Availability availability = 5;
}

message Ticket {
    string id = 1;
    int32 number = 2;
    
    Slot slot = 3;
}

/* filters */ 

message SlotFilter {}
message SlotsFilter {}
message TicketFilter {}

/* service */ 

service BookingService {
    rpc GetSlots(GetSlotsRequest) returns (GetSlotsResponse);
    rpc PreviewSlots(PreviewSlotsRequest) returns (PreviewSlotsResponse);
    
    rpc Book(BookRequest) returns (BookResponse);
    rpc GetBooking(GetBookingRequest) returns (GetBookingResponse);
    rpc GetBookings(GetBookingsRequest) returns (GetBookingsResponse);
    
    rpc Confirm(ConfirmRequest) returns (ConfirmResponse);
    rpc CheckIn(CheckInRequest) returns (CheckInResponse);
    rpc Cancel(CancelRequest) returns (CancelResponse);
    rpc Shift(ShiftRequest) returns (ShiftResponse);

    rpc GetTicket(GetTicketRequest) returns (GetTicketResponse);
    rpc CheckTicket(CheckTicketRequest) returns (CheckTicketResponse);
}

message GetSlotsRequest {
    string service_id = 1;
    google.protobuf.Timestamp from = 2;
    google.protobuf.Timestamp to = 3;
}
message GetSlotsResponse {
    repeated Slot slots = 1;
}

message PreviewSlotsRequest {
    string service_id = 1;
    google.protobuf.Timestamp from = 2;
    google.protobuf.Timestamp to = 3;
    repeated business.Availability availabilities = 4;
}
message PreviewSlotsResponse {
    repeated Slot slots = 1;
}

message BookRequest {
    string service_id = 1;
    google.protobuf.Timestamp from = 2;
    google.protobuf.Duration duration = 3;
}
message BookResponse {
    string slot_id = 1;
}

message GetBookingRequest {
    SlotFilter filter = 1;
}
message GetBookingResponse {
     Slot slot = 1;
}

message GetBookingsRequest {
    SlotsFilter filter = 1;
}
message GetBookingsResponse {
     repeated Slot slots = 1;
}

message ConfirmRequest {
    string slot_id = 1;
}
message ConfirmResponse {}

message CheckInRequest {
    string slot_id = 1;
}
message CheckInResponse {
    Ticket ticket = 1;
}

message CancelRequest {
    string slot_id = 1;
}
message CancelResponse {}

message ShiftRequest {
    string slot_id = 1;
    google.protobuf.Timestamp from = 2;
}
message ShiftResponse {}

message GetTicketRequest {
    TicketFilter filter = 1;
}
message GetTicketResponse {
    Ticket ticket = 1;
}

message CheckTicketRequest {
    TicketFilter filter = 1;
}
message CheckTicketResponse {
    Ticket ticket = 1;
}

/* storage */

service BookingStorage {
    rpc CreateSlot(CreateSlotRequest) returns (CreateSlotResponse);
    rpc UpdateSlot(UpdateSlotRequest) returns (UpdateSlotResponse);
    rpc DeleteSlot(DeleteSlotRequest) returns (DeleteSlotResponse);
    rpc FindSlot(FindSlotRequest) returns (FindSlotResponse);
    rpc FindSlots(FindSlotsRequest) returns (FindSlotsResponse);
    rpc CreateTicket(CreateTicketRequest) returns (CreateTicketResponse);
    rpc FindTicket(FindTicketRequest) returns (FindTicketResponse);
}

message CreateSlotRequest{
    Slot slot = 1;
}
message CreateSlotResponse{
    string slot_id = 1;
}

message UpdateSlotRequest{
    string slot_id = 1;
    Slot slot = 2;
}
message UpdateSlotResponse{
    Slot slot = 1;
}

message DeleteSlotRequest{
    string slot_id = 1;
}
message DeleteSlotResponse{
    Slot slot = 1;
}

message FindSlotRequest{
    SlotFilter filter = 1;
}
message FindSlotResponse{
    Slot slot = 1;
}

message FindSlotsRequest{
    SlotsFilter filter = 1;
}
message FindSlotsResponse{
    repeated Slot slots = 1;
}

message CreateTicketRequest{
    Ticket ticket = 1;
}
message CreateTicketResponse{
    string ticket_id = 1;
}

message FindTicketRequest{
    TicketFilter filter = 1;
}
message FindTicketResponse{
    Ticket ticket = 1;
}
